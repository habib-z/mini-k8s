---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
type: Opaque
data:
  redis_username: cm9vdA==
  redis_password: cm9vdA==

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database
  labels:
    app: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      containers:
        - image: redis:7.2.3-alpine
          imagePullPolicy: IfNotPresent
          name: database
          ports:
            - containerPort: 6379
              protocol: TCP
          resources:
            limits:
              cpu: "0.1"
              ephemeral-storage: 1G
              memory: 200M
            requests:
              cpu: "0.1"
              ephemeral-storage: 1G
              memory: 200M
          env:
            - name: ENV_USER_NAME
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: redis_username
            - name: ENV_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: redis_password
          volumeMounts:
            - mountPath: /data
              name: chat-db
      restartPolicy: Always
      volumes:
        - name: chat-db
          persistentVolumeClaim:
            claimName: chat-db
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: chat-db
  name: chat-db
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: v1
kind: Service
metadata:
  name: database
  labels:
    app: database
spec:
  selector:
    app: database
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: backend

spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - image: hasandardashti/chat_backend:v2
          imagePullPolicy: IfNotPresent
          name: img-backend
          ports:
            - protocol: TCP
              containerPort: 8000
          resources:
            limits:
              cpu: "0.2"
              ephemeral-storage: 1G
              memory: 400M
            requests:
              cpu: "0.2"
              ephemeral-storage: 1G
              memory: 400M

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  labels:
    app: backend

spec:
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config-map
data:
  backend_url: backend-service
  backend_port: "8000"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: frontend
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - image: hasandardashti/chat_front:v3
          imagePullPolicy: IfNotPresent
          name: frontend
          ports:
            - containerPort: 8888
              protocol: TCP
          resources:
            limits:
              cpu: "0.4"
              ephemeral-storage: 1G
              memory: 800M
            requests:
              cpu: "0.4"
              ephemeral-storage: 1G
              memory: 800M
          env:
            - name: VITE_BACK_END_ADDRESS
              valueFrom:
                configMapKeyRef:
                  name: app-config-map
                  key: backend_url
            - name: VITE_BACK_END_PORT
              valueFrom:
                configMapKeyRef:
                  name: app-config-map
                  key: backend_port

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  labels:
    app: frontend
spec:
  ports:
    - name: "8888"
      port: 8888
      targetPort: 8888

  selector:
    app: frontend

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-conf
  template:
    metadata:
      labels:
        app: nginx-conf
    spec:
      containers:
        - name: nginx-conf
          image: hasandardashti/nginx-conf:v3
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          resources:
            limits:
              cpu: "0.2"
              ephemeral-storage: 1G
              memory: 400M
            requests:
              cpu: "0.2"
              ephemeral-storage: 1G
              memory: 400M
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  selector:
    app: nginx-conf
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80

  type: LoadBalancer
